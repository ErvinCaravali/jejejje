version: '3'

networks:
  mi-red:
    driver: bridge

services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    image: ervincaravaliibarra/galeria-9:latest
    restart: always
    command: sh -c "sleep 10 && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/code
      - web_data_volume:/code/data  # Agrega este volumen para persistencia en web
    depends_on:
      - db
    environment:
        DATABASE_HOST: ${DATABASE_HOST}
        DATABASE_NAME: ${DATABASE_NAME}
        DATABASE_USER: ${DATABASE_USER}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    stdin_open: true
    tty: true
    networks:
      - mi-red

  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    image: ervincaravaliibarra/bdgaleria-9:latest
    environment:
        DATABASE_NAME: ${DATABASE_NAME}
        DATABASE_USER: ${DATABASE_USER}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - db_data_volume:/var/lib/postgresql/data
    networks:
      - mi-red

  pgadmin:
    build:
      context: .
      dockerfile: Dockerfile.pgadmin
    image: ervincaravaliibarra/pgadmin-galeria-9:latest
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "90:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - mi-red

volumes:
  db_data_volume:
  pgadmin_data:
  web_data_volume:  # Definici√≥n del volumen para
