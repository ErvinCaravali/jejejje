name: push

on:
  pull_request:
    branches:
      - main

jobs:
  verify_database_population:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Iniciar contenedor y obtener IP
        id: container_ip
        run: |
          CONTAINER_ID=$(docker run -d ervincaravaliibarra/bdgaleria-9:latest)
          CONTAINER_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER_ID)
          echo "La direcci√≥n IP del contenedor es: $CONTAINER_IP"
          echo "::set-output name=container_ip::$CONTAINER_IP"  # Establece la variable de salida container_ip

      - name: Set execute permissions
        run: chmod +x ./auction_app/verify_database.sh

      - name: Verify database population
        id: verify_db_pop
        run: ./auction_app/verify_database.sh ${{ steps.container_ip.outputs.container_ip }}
        env:
          DATABASE_USER: postgres
          DATABASE_NAME: projecto

      - name: Check verification status
        if: steps.verify_db_pop.outcome == 'success'
        run: echo "All tables are populated. Continue with the workflow."

      - name: Verification failed
        if: steps.verify_db_pop.outcome != 'success'
        run: |
          echo "One or more tables are not populated. Halting the workflow."
          exit 1

  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and push images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker-compose build
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker-compose push
